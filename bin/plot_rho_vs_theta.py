#!/usr/bin/env python
import numpy as np
from NNprimeLib import convenience as nnpc
from sys import argv
import matplotlib.pyplot as plt
import argparse as ap
import pathlib as pl

plt.rcParams['figure.figsize'] = [10, 10]

def create_parser():
    parser = ap.ArgumentParser(description = "Plots rho vs theta for given \
input summary files generated by the NNprimeLib library's analyze_nnpc_data.py. \
Useful for checking the behavior of a material as m or theta vary.", 
    formatter_class = ap.ArgumentDefaultsHelpFormatter)
    parser.add_argument("-T", "--title",help = "Title for plot")
    parser.add_argument("-f", "--files", type = pl.Path, nargs = "+", 
                        help = "summary_* files for plotting.")

    

    return parser

def loglogplot(data, mass):
    start = 0
    plt.loglog(data[start:,1], data[start:,3], marker = ".", label = r"$\rho_{{nn}}$ @ {} neV".format(mass) , ls = "")
    #plt.loglog(data[start:,1], data[start:,4], marker = ".", label = r"$\rho_{{nn'}}$ @ {} neV".format(mass), ls = "")
    plt.loglog(data[start:,1], data[start:,6], marker = ".", label = r"$\rho_{{n'n'}}$ @ {} neV".format(mass), ls = "")

def main(argv=None):
    if argv is None:
        argv = sys.argv
    
    parser = create_parser()
    inputs = parser.parse_args(argv[1:])

    print(inputs)

    title = inputs.title
    datafile = [str(i) for i in inputs.files]
    
    data = []
    print(datafile)
    for files in datafile:
        with open(files, "r") as f:
            mass, data = nnpc.loadNNprimeSummary(files)
            
            loglogplot(data, mass)

        f.close()
    
    plt.xlabel(r"$\theta_0$")
    plt.ylabel(r"$\rho$")
    #plt.title(f"{title} @ {data[0,2]} m")
    plt.legend(loc = "lower left")
    plt.show()

if __name__ == "__main__":
    main()
